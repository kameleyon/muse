{"version":3,"file":"Profile-BGUgUusy.js","sources":["../../src/pages/Profile.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { RootState } from '@/store/store';\nimport { setUser } from '@/store/slices/authSlice';\nimport { addToast } from '@/store/slices/uiSlice';\nimport useThemeStore from '@/store/themeStore';\n\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n} from '@/components/ui/Card';\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormError,\n  FormHint,\n  FormActions,\n} from '@/components/ui/Form';\nimport { Input } from '@/components/ui/Input';\nimport { Button } from '@/components/ui/Button';\nimport { Switch } from '@/components/ui/Switch';\n\n// Profile schema\nconst profileSchema = z.object({\n  fullName: z.string().min(2, 'Full name must be at least 2 characters'),\n  email: z.string().email('Please enter a valid email address').optional(),\n  bio: z.string().max(200, 'Bio must be less than 200 characters').optional(),\n});\n\ntype ProfileFormData = z.infer<typeof profileSchema>;\n\n// Password schema\nconst passwordSchema = z\n  .object({\n    currentPassword: z.string().min(1, 'Current password is required'),\n    newPassword: z\n      .string()\n      .min(8, 'Password must be at least 8 characters')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n        'Password must contain at least one uppercase letter, one lowercase letter, and one number'\n      ),\n    confirmPassword: z.string().min(8, 'Please confirm your password'),\n  })\n  .refine((data) => data.newPassword === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: ['confirmPassword'],\n  });\n\ntype PasswordFormData = z.infer<typeof passwordSchema>;\n\n// Notification preferences schema\nconst notificationSchema = z.object({\n  emailNotifications: z.boolean().default(true),\n  productUpdates: z.boolean().default(true),\n  securityAlerts: z.boolean().default(true),\n  marketingEmails: z.boolean().default(false),\n});\n\ntype NotificationFormData = z.infer<typeof notificationSchema>;\n\nconst Profile: React.FC = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: RootState) => state.auth);\n  const { theme, toggleTheme } = useThemeStore();\n  \n  const [activeTab, setActiveTab] = useState('profile');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Profile form\n  const {\n    register: registerProfile,\n    handleSubmit: handleSubmitProfile,\n    formState: { errors: errorsProfile },\n  } = useForm<ProfileFormData>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n      fullName: user?.fullName || '',\n      email: user?.email || '',\n      bio: 'AI enthusiast and content creator',\n    },\n  });\n\n  // Password form\n  const {\n    register: registerPassword,\n    handleSubmit: handleSubmitPassword,\n    formState: { errors: errorsPassword },\n    reset: resetPassword,\n  } = useForm<PasswordFormData>({\n    resolver: zodResolver(passwordSchema),\n  });\n\n  // Notification form\n  const {\n    register: registerNotifications,\n    handleSubmit: handleSubmitNotifications,\n    formState: { errors: errorsNotifications },\n    setValue: setNotificationValue,\n    watch: watchNotifications,\n  } = useForm<NotificationFormData>({\n    resolver: zodResolver(notificationSchema),\n    defaultValues: {\n      emailNotifications: true,\n      productUpdates: true,\n      securityAlerts: true,\n      marketingEmails: false,\n    },\n  });\n\n  // Toggle notification preference\n  const toggleNotification = (field: keyof NotificationFormData) => {\n    setNotificationValue(field, !watchNotifications(field));\n  };\n\n  // Handle profile update\n  const onProfileSubmit = async (data: ProfileFormData) => {\n    try {\n      setIsLoading(true);\n      \n      // Simulate API call with a delay\n      await new Promise((r) => setTimeout(r, 1000));\n      \n      // Update user in state\n      if (user) {\n        dispatch(\n          setUser({\n            ...user,\n            fullName: data.fullName,\n          })\n        );\n      }\n      \n      dispatch(\n        addToast({\n          type: 'success',\n          message: 'Profile updated successfully',\n        })\n      );\n    } catch (error: any) {\n      dispatch(\n        addToast({\n          type: 'error',\n          message: error.message || 'Failed to update profile',\n        })\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle password update\n  const onPasswordSubmit = async (data: PasswordFormData) => {\n    try {\n      setIsLoading(true);\n      \n      // Simulate API call with a delay\n      await new Promise((r) => setTimeout(r, 1000));\n      \n      dispatch(\n        addToast({\n          type: 'success',\n          message: 'Password updated successfully',\n        })\n      );\n      \n      resetPassword();\n    } catch (error: any) {\n      dispatch(\n        addToast({\n          type: 'error',\n          message: error.message || 'Failed to update password',\n        })\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle notification preferences update\n  const onNotificationsSubmit = async (data: NotificationFormData) => {\n    try {\n      setIsLoading(true);\n      \n      // Simulate API call with a delay\n      await new Promise((r) => setTimeout(r, 1000));\n      \n      dispatch(\n        addToast({\n          type: 'success',\n          message: 'Notification preferences updated',\n        })\n      );\n    } catch (error: any) {\n      dispatch(\n        addToast({\n          type: 'error',\n          message: error.message || 'Failed to update notification preferences',\n        })\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold font-heading mb-2\">Profile Settings</h1>\n        <p className=\"text-neutral-medium max-w-3xl\">\n          Manage your account settings and preferences.\n        </p>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row gap-8\">\n        {/* Sidebar Navigation */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"w-full md:w-64\"\n        >\n          <Card>\n            <CardContent className=\"p-4\">\n              <nav className=\"flex flex-col space-y-1\">\n                <button\n                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium ${\n                    activeTab === 'profile'\n                      ? 'bg-primary text-secondary'\n                      : 'text-secondary dark:text-neutral-light hover:bg-neutral-light/20 dark:hover:bg-neutral-dark/50'\n                  }`}\n                  onClick={() => setActiveTab('profile')}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-3\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    />\n                  </svg>\n                  Profile Information\n                </button>\n                <button\n                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium ${\n                    activeTab === 'password'\n                      ? 'bg-primary text-secondary'\n                      : 'text-secondary dark:text-neutral-light hover:bg-neutral-light/20 dark:hover:bg-neutral-dark/50'\n                  }`}\n                  onClick={() => setActiveTab('password')}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-3\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n                    />\n                  </svg>\n                  Security\n                </button>\n                <button\n                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium ${\n                    activeTab === 'notifications'\n                      ? 'bg-primary text-secondary'\n                      : 'text-secondary dark:text-neutral-light hover:bg-neutral-light/20 dark:hover:bg-neutral-dark/50'\n                  }`}\n                  onClick={() => setActiveTab('notifications')}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-3\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                    />\n                  </svg>\n                  Notifications\n                </button>\n                <button\n                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium ${\n                    activeTab === 'appearance'\n                      ? 'bg-primary text-secondary'\n                      : 'text-secondary dark:text-neutral-light hover:bg-neutral-light/20 dark:hover:bg-neutral-dark/50'\n                  }`}\n                  onClick={() => setActiveTab('appearance')}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-3\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.172 2.172a2 2 0 010 2.828l-8.486 8.486a4 4 0 01-5.656 0 2 2 0 010-2.828l8.486-8.486z\"\n                    />\n                  </svg>\n                  Appearance\n                </button>\n                <button\n                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium ${\n                    activeTab === 'subscription'\n                      ? 'bg-primary text-secondary'\n                      : 'text-secondary dark:text-neutral-light hover:bg-neutral-light/20 dark:hover:bg-neutral-dark/50'\n                  }`}\n                  onClick={() => setActiveTab('subscription')}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-3\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\n                    />\n                  </svg>\n                  Subscription\n                </button>\n              </nav>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Main Content */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"flex-1\"\n        >\n          {/* Profile Information */}\n          {activeTab === 'profile' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Profile Information</CardTitle>\n                <CardDescription>\n                  Update your personal information\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Form onSubmit={handleSubmitProfile(onProfileSubmit)}>\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"relative mr-4\">\n                      <div className=\"h-20 w-20 rounded-full bg-primary flex items-center justify-center overflow-hidden\">\n                        {user?.avatar_url ? (\n                          <img\n                            src={user.avatar_url}\n                            alt={user.fullName || user.email}\n                            className=\"h-full w-full object-cover\"\n                          />\n                        ) : (\n                          <span className=\"text-2xl font-medium text-secondary\">\n                            {user?.fullName\n                              ? user.fullName.substring(0, 1)\n                              : user?.email.substring(0, 1).toUpperCase()}\n                          </span>\n                        )}\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"absolute bottom-0 right-0 bg-secondary dark:bg-neutral-dark text-white p-1 rounded-full shadow-md\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"\n                          />\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium\">Profile Picture</h3>\n                      <p className=\"text-sm text-neutral-medium\">\n                        JPG, GIF or PNG. Max size 2MB.\n                      </p>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        size=\"sm\"\n                        className=\"mt-2\"\n                      >\n                        Upload New Image\n                      </Button>\n                    </div>\n                  </div>\n\n                  <FormGroup>\n                    <FormLabel htmlFor=\"fullName\" required>\n                      Full Name\n                    </FormLabel>\n                    <Input\n                      id=\"fullName\"\n                      type=\"text\"\n                      placeholder=\"John Doe\"\n                      {...registerProfile('fullName')}\n                      error={errorsProfile.fullName?.message}\n                      disabled={isLoading}\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <FormLabel htmlFor=\"email\" required>\n                      Email Address\n                    </FormLabel>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"example@email.com\"\n                      {...registerProfile('email')}\n                      error={errorsProfile.email?.message}\n                      disabled={true}\n                      rightIcon={\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-5 w-5 text-success\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                          />\n                        </svg>\n                      }\n                    />\n                    <FormHint>Email address cannot be changed</FormHint>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <FormLabel htmlFor=\"bio\">Bio</FormLabel>\n                    <textarea\n                      id=\"bio\"\n                      className=\"w-full px-3 py-2 rounded-md border border-neutral-light dark:border-neutral-dark bg-white dark:bg-neutral-dark text-secondary dark:text-neutral-white focus:outline-none focus:ring-2 focus:ring-accent-teal transition-all duration-200 h-24 resize-y\"\n                      placeholder=\"Tell us about yourself...\"\n                      {...registerProfile('bio')}\n                      disabled={isLoading}\n                    />\n                    {errorsProfile.bio?.message && (\n                      <FormError>{errorsProfile.bio.message}</FormError>\n                    )}\n                    <FormHint>\n                      Brief description for your profile. Maximum 200 characters.\n                    </FormHint>\n                  </FormGroup>\n\n                  <Button\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={isLoading}\n                    className=\"mt-6\"\n                  >\n                    Save Changes\n                  </Button>\n                </Form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Password/Security */}\n          {activeTab === 'password' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Security</CardTitle>\n                <CardDescription>\n                  Update your password and security settings\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Form onSubmit={handleSubmitPassword(onPasswordSubmit)}>\n                  <FormGroup>\n                    <FormLabel htmlFor=\"currentPassword\" required>\n                      Current Password\n                    </FormLabel>\n                    <Input\n                      id=\"currentPassword\"\n                      type=\"password\"\n                      placeholder=\"••••••••\"\n                      {...registerPassword('currentPassword')}\n                      error={errorsPassword.currentPassword?.message}\n                      disabled={isLoading}\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <FormLabel htmlFor=\"newPassword\" required>\n                      New Password\n                    </FormLabel>\n                    <Input\n                      id=\"newPassword\"\n                      type=\"password\"\n                      placeholder=\"••••••••\"\n                      {...registerPassword('newPassword')}\n                      error={errorsPassword.newPassword?.message}\n                      disabled={isLoading}\n                    />\n                    <FormHint>\n                      Password must be at least 8 characters and include uppercase,\n                      lowercase, and numbers.\n                    </FormHint>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <FormLabel htmlFor=\"confirmPassword\" required>\n                      Confirm New Password\n                    </FormLabel>\n                    <Input\n                      id=\"confirmPassword\"\n                      type=\"password\"\n                      placeholder=\"••••••••\"\n                      {...registerPassword('confirmPassword')}\n                      error={errorsPassword.confirmPassword?.message}\n                      disabled={isLoading}\n                    />\n                  </FormGroup>\n\n                  <Button\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={isLoading}\n                    className=\"mt-6\"\n                  >\n                    Update Password\n                  </Button>\n                </Form>\n\n                <div className=\"mt-8 pt-6 border-t border-neutral-light dark:border-neutral-dark\">\n                  <h3 className=\"text-lg font-medium mb-4\">Two-Factor Authentication</h3>\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div>\n                        <h4 className=\"font-medium\">Two-Factor Authentication</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Add an extra layer of security to your account\n                        </p>\n                      </div>\n                      <Switch id=\"2fa\" />\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Notifications */}\n          {activeTab === 'notifications' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Notification Preferences</CardTitle>\n                <CardDescription>\n                  Manage how we contact you\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Form onSubmit={handleSubmitNotifications(onNotificationsSubmit)}>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">Email Notifications</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Receive email notifications\n                        </p>\n                      </div>\n                      <Switch\n                        id=\"emailNotifications\"\n                        checked={watchNotifications('emailNotifications')}\n                        onCheckedChange={() =>\n                          toggleNotification('emailNotifications')\n                        }\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">Product Updates</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Receive updates about new features and improvements\n                        </p>\n                      </div>\n                      <Switch\n                        id=\"productUpdates\"\n                        checked={watchNotifications('productUpdates')}\n                        onCheckedChange={() => toggleNotification('productUpdates')}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">Security Alerts</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Receive alerts about security incidents and unusual activity\n                        </p>\n                      </div>\n                      <Switch\n                        id=\"securityAlerts\"\n                        checked={watchNotifications('securityAlerts')}\n                        onCheckedChange={() => toggleNotification('securityAlerts')}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">Marketing Emails</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Receive marketing emails and promotional offers\n                        </p>\n                      </div>\n                      <Switch\n                        id=\"marketingEmails\"\n                        checked={watchNotifications('marketingEmails')}\n                        onCheckedChange={() => toggleNotification('marketingEmails')}\n                      />\n                    </div>\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={isLoading}\n                    className=\"mt-6\"\n                  >\n                    Save Preferences\n                  </Button>\n                </Form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Appearance */}\n          {activeTab === 'appearance' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Appearance</CardTitle>\n                <CardDescription>\n                  Customize how MagicMuse looks for you\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium mb-4\">Theme</h3>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-medium\">Dark Mode</h4>\n                        <p className=\"text-sm text-neutral-medium\">\n                          Toggle between light and dark mode\n                        </p>\n                      </div>\n                      <Switch checked={theme === 'dark'} onCheckedChange={toggleTheme} />\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Subscription */}\n          {activeTab === 'subscription' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Subscription</CardTitle>\n                <CardDescription>\n                  Manage your subscription plan and billing\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"bg-neutral-light/20 dark:bg-neutral-dark/50 p-4 rounded-md mb-6\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium\">Current Plan</h3>\n                    <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-success/20 text-success\">\n                      Active\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-xl font-bold\">Premium</h4>\n                      <p className=\"text-sm text-neutral-medium\">\n                        $19.99/month, billed monthly\n                      </p>\n                    </div>\n                    <Button variant=\"outline\" size=\"sm\">\n                      Change Plan\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h3 className=\"font-medium mb-2\">Plan Features</h3>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 mr-2 text-success\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                      Unlimited content generation\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 mr-2 text-success\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                      Access to all AI models\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 mr-2 text-success\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                      Priority support\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 mr-2 text-success\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                      Advanced export options\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h3 className=\"font-medium mb-2\">Billing Information</h3>\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm\">Next billing date</span>\n                    <span className=\"text-sm font-medium\">April 21, 2025</span>\n                  </div>\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <span className=\"text-sm\">Payment method</span>\n                    <span className=\"text-sm font-medium\">Visa ending in 4242</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\">\n                      Update Payment Method\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\">\n                      Billing History\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"pt-4 border-t border-neutral-light dark:border-neutral-dark\">\n                  <Button variant=\"danger\">Cancel Subscription</Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["profileSchema","z","passwordSchema","data","notificationSchema","Profile","dispatch","useDispatch","user","useSelector","state","theme","toggleTheme","useThemeStore","activeTab","setActiveTab","useState","isLoading","setIsLoading","registerProfile","handleSubmitProfile","errorsProfile","useForm","zodResolver","registerPassword","handleSubmitPassword","errorsPassword","resetPassword","registerNotifications","handleSubmitNotifications","errorsNotifications","setNotificationValue","watchNotifications","toggleNotification","field","onProfileSubmit","r","setUser","addToast","error","onPasswordSubmit","onNotificationsSubmit","jsxs","jsx","motion","Card","CardContent","CardHeader","CardTitle","CardDescription","Form","Button","FormGroup","FormLabel","Input","_a","_b","FormHint","_c","FormError","_d","_e","_f","Switch"],"mappings":"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"}